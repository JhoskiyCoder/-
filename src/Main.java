public class Main {
    public static void main(String[] args) {
        int[] arr = {2, 455, 75, 407, 912, 747, 17, 489, 1227, 1782, 375, 680, 23, 1257, 974, 1874, 1704, 196, 351, 578, 818, 252, 665, 882, 1387, 594, 1901, 721, 1577, 1915, 1962, 1256, 776, 743, 1781, 1589, 135, 788, 934, 808, 711, 1846, 784, 987, 1487, 1778, 453, 1655, 1363, 1894, 1988, 795, 1483, 1841, 1724, 398, 1569, 109, 86, 691, 283, 110, 829, 1961, 245, 1815, 258, 1677, 107, 261, 1977, 300, 1984, 487, 732, 1359, 222, 977, 235, 355, 67, 1472, 786, 849, 1159, 1352, 572, 1112, 477, 1368, 1970, 881, 1829, 681, 228, 1297, 738, 539, 1454, 1282, 1231, 621, 817, 761, 191, 1000, 669, 1541, 1872, 462, 266, 917, 526, 306, 797, 484, 1431, 1210, 832, 1026, 1858, 469, 904, 1007, 1759, 588, 1621, 46, 1982, 53, 1276, 173, 699, 76, 1209, 1049, 561, 1819, 411, 1633, 1917, 670, 1303, 1213, 1738, 1188, 1094, 773, 1080, 583, 1585, 1204, 735, 278, 851, 1045, 1428, 184, 1505, 1397, 1878, 1600, 1595, 1844, 1155, 1336, 1502, 1817, 1200, 729, 1081, 1931, 1284, 970, 27, 1238, 1712, 961, 1350, 190, 1814, 522, 1471, 289, 799, 1624, 560, 267, 576, 750, 36, 740, 1549, 1004, 1091, 546, 325, 1900, 1625, 541, 1187, 542, 1124, 256, 591, 731, 1800, 1559, 85, 1722, 1212, 1574, 399, 1306, 989, 543, 1697, 533, 717, 1675, 683, 402, 1014, 1754, 1601, 22, 575, 1135, 1480, 1995, 463, 828, 1831, 1611, 1251, 431, 1668, 695, 438, 765, 1409, 834, 513, 555, 1960, 1126, 759, 112, 1016, 601, 1141, 1253, 1034, 887, 1622, 264, 1511, 460, 1623, 1528, 1599, 857, 1787, 1537, 1918, 1856, 623, 66, 741, 883, 1443, 1861, 715, 1506, 953, 81, 822, 1132, 1216, 1750, 826, 1643, 1461, 1568, 1278, 1951, 1221, 940, 367, 1662, 1673, 964, 1365, 47, 1494, 1748, 301, 248, 1118, 1920, 1615, 1645, 1151, 1198, 1325, 1444, 903, 1835, 1337, 1283, 1138, 950, 1734, 13, 1083, 1848, 1464, 277, 217, 335, 1099, 1114, 1403, 1911, 617, 3, 26, 113, 985, 768, 725, 593, 806, 1422, 180, 240, 158, 981, 1942, 1259, 1755, 1664, 1189, 1717, 79, 523, 492, 1035, 816, 910, 1508, 172, 631, 1526, 341, 142, 1646, 1366, 1335, 1760, 302, 104, 1893, 597, 1002, 392, 294, 1184, 991, 701, 307, 133, 896, 417, 668, 1640, 978, 182, 983, 1225, 350, 1692, 198, 559, 793, 360, 1523, 960, 842, 639, 483, 1327, 1164, 6, 710, 1347, 1966, 781, 547, 1649, 988, 1883, 21, 1833, 1111, 1235, 1855, 1667, 579, 163, 1598, 1120, 800, 1555, 1452, 1332, 1783, 478, 485, 767, 714, 552, 1752, 1990, 959, 1547, 491, 1925, 116, 1736, 1956, 1980, 926, 1532, 1270, 28, 1341, 219, 1740, 150, 1130, 1652, 64, 418, 333, 241, 700, 315, 2000, 1167, 1529, 1913, 1930, 1843, 1199, 1729, 566, 231, 1765, 622, 1467, 1293, 1183, 121, 318, 1360, 1093, 1939, 1218, 1310, 1097, 839, 844, 12, 1638, 879, 1030, 694, 845, 814, 259, 1521, 1053, 516, 614, 1451, 619, 123, 1100, 1670, 951, 674, 641, 1928, 889, 1301, 332, 1698, 1396, 494, 1699, 1311, 1614, 590, 1137, 310, 1008, 785, 1591, 1973, 1703, 1821, 454, 156, 900, 908, 439, 662, 1370, 878, 497, 348, 89, 1953, 1681, 1316, 362, 1009, 1641, 728, 1426, 1725, 1926, 437, 1842, 1010, 1475, 1880, 1330, 1978, 1298, 336, 898, 1741, 1261, 442, 1890, 1362, 108, 7, 237, 833, 118, 803, 942, 1068, 1940, 406, 1857, 901, 880, 193, 304, 1029, 676, 1897, 1998, 930, 807, 1106, 550, 1818, 381, 1854, 501, 946, 1630, 924, 1895, 208, 146, 824, 58, 1329, 1914, 1440, 809, 448, 907, 1402, 41, 1867, 1586, 344, 1887, 853, 716, 1936, 274, 1145, 1453, 384, 1085, 320, 894, 134, 615, 1885, 955, 1260, 1757, 323, 585, 450, 521, 1935, 1603, 1246, 722, 1172, 338, 445, 763, 1180, 1543, 1345, 1985, 997, 354, 396, 730, 1875, 1616, 125, 1924, 5, 1430, 1693, 1133, 512, 1358, 1492, 1669, 744, 693, 1727, 1687, 1731, 1109, 545, 1548, 1163, 1142, 577, 811, 748, 656, 1522, 1354, 1552, 185, 1043, 1410, 1587, 1584, 515, 531, 122, 167, 1489, 1207, 530, 77, 1728, 63, 459, 1635, 666, 1694, 1582, 1300, 430, 1619, 1415, 236, 1433, 704, 1353, 1232, 772, 1948, 1999, 847, 1899, 965, 1125, 1214, 1515, 606, 872, 655, 154, 1102, 1104, 1767, 429, 532, 254, 815, 1478, 209, 506, 416, 160, 1272, 1407, 1613, 682, 421, 1789, 1873, 88, 1733, 1711, 356, 130, 1427, 1038, 1671, 1179, 1571, 1557, 742, 1089, 1689, 212, 1938, 33, 1154, 1904, 144, 1455, 425, 972, 850, 253, 554, 1438, 611, 705, 663, 1510, 34, 265, 329, 644, 712, 1507, 958, 286, 529, 861, 1197, 1343, 540, 1117, 1399, 938, 262, 242, 1233, 584, 216, 612, 565, 603, 124, 215, 1140, 528, 464, 99, 486, 774, 1825, 796, 1064, 1190, 920, 727, 1501, 1384, 284, 1674, 1768, 1715, 1499, 1274, 1429, 1937, 865, 1039, 633, 1628, 456, 893, 504, 1851, 707, 1314, 1766, 1866, 820, 1110, 999, 525, 461, 52, 1195, 973, 979, 1289, 152, 1706, 1084, 476, 1103, 1780, 913, 1954, 862, 1357, 379, 941, 1799, 1320, 673, 87, 720, 1590, 38, 305, 452, 1313, 1578, 186, 1834, 1822, 840, 1082, 794, 1131, 519, 823, 563, 1592, 467, 1498, 1941, 827, 637, 1658, 114, 1863, 1739, 1906, 273, 263, 1267, 854, 1485, 1150, 353, 1779, 1955, 295, 1193, 916, 388, 888, 1079, 1784, 423, 155, 874, 468, 1964, 1747, 1538, 1902, 1593, 409, 1028, 432, 1481, 963, 1764, 570, 1696, 598, 1676, 689, 136, 96, 153, 466, 929, 517, 415, 1967, 1417, 157, 140, 1418, 1041, 322, 292, 1666, 1271, 229, 1046, 1031, 928, 770, 82, 249, 692, 1542, 1, 1971, 1356, 177, 149, 1194, 204, 1969, 1136, 1380, 1558, 287, 18, 1561, 80, 1832, 170, 571, 1648, 1174, 55, 479, 957, 580, 1486, 1710, 685, 30, 1075, 1639, 1119, 783, 346, 976, 225, 496, 1929, 1845, 1491, 1562, 645, 1996, 1836, 760, 1095, 1412, 1793, 1907, 524, 364, 359, 50, 925, 1098, 798, 363, 1355, 771, 1361, 640, 1488, 1224, 754, 151, 188, 1202, 1425, 13}; // несортированный массив

        System.out.println("Исходный массив:");
        printArray(arr);

        long startTime = System.nanoTime(); // время начала выполнения

        insertionSort(arr); // сортировка вставками

        long endTime = System.nanoTime(); // время окончания выполнения

        System.out.println("\nОтсортированный массив:");
        printArray(arr);

        long durationMilliseconds = (endTime - startTime) / 1_000_000; // время выполнения в миллисекундах
        long durationNanoseconds = (endTime - startTime) % 1_000_000; // время выполнения в наносекундах

        System.out.println("\nВремя выполнения: " + durationMilliseconds + " миллисекунд " + durationNanoseconds + " наносекунд");
    }

    public static void insertionSort(int[] arr) {
        int n = arr.length;
        for (int i = 1; i < n; ++i) {
            int key = arr[i];
            int j = i - 1;

            while (j >= 0 && arr[j] > key) {
                arr[j + 1] = arr[j];
                j = j - 1;
            }
            arr[j + 1] = key;
        }
    }

    public static void printArray(int[] arr) {
        for (int i = 0; i < arr.length; ++i)
            System.out.print(arr[i] + " ");
        System.out.println();
    }
}